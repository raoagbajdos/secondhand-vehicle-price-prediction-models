[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "second-hand-car-price-prediction"
version = "0.1.0"
description = "A comprehensive ML pipeline for predicting second-hand car prices using web-scraped data"
authors = [
    {name = "Your Name", email = "your.email@example.com"},
]
dependencies = [
    "pandas>=2.0.0",
    "numpy>=1.24.0",
    "scikit-learn>=1.3.0",
    "xgboost>=1.7.0",
    "lightgbm>=4.0.0",
    "catboost>=1.2.0",
    "requests>=2.31.0",
    "beautifulsoup4>=4.12.0",
    "selenium>=4.15.0",
    "scrapy>=2.11.0",
    "pydantic>=2.0.0",
    "loguru>=0.7.0",
    "hydra-core>=1.3.0",
    "mlflow>=2.7.0",
    "optuna>=3.4.0",
    "joblib>=1.3.0",
    "python-dotenv>=1.0.0",
    "plotly>=5.17.0",
    "seaborn>=0.12.0",
    "matplotlib>=3.7.0",
    "tqdm>=4.66.0",
    "pyyaml>=6.0",
]
requires-python = ">=3.9"
readme = "README.md"
license = {text = "MIT"}

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
    "mypy>=1.5.0",
    "pre-commit>=3.4.0",
    "jupyter>=1.0.0",
    "ipykernel>=6.25.0",
]

[tool.black]
line-length = 88
target-version = ['py39']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["car_price_prediction"]

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py"
python_classes = "Test*"
python_functions = "test_*"
addopts = "--cov=car_price_prediction --cov-report=term-missing --cov-report=html"

[project.scripts]
train-classification = "car_price_prediction.models.classification.train:main"
train-regression = "car_price_prediction.models.regression.train:main"
train-valuation = "car_price_prediction.models.valuation.train:main"
scrape-data = "car_price_prediction.data.scraper:main"
preprocess-data = "car_price_prediction.data.preprocessing:main"
